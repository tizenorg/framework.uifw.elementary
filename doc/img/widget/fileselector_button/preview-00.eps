%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (../doc/latex/img/widget/fileselector_button/preview-00.eps)
%%CreationDate: (2014-09-11T12:21:49+09:00)
%%BoundingBox: -0 -0 57 21
%%HiResBoundingBox: 0 0 57 21
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 57 21
userdict begin
DisplayImage
0 0
57 21
12
57 21
0
0
474747464646464646464646464646464646464646464646464646464646464646464646464646
464646464646464646464646464646464646464646464646464646464646464646464646464646
464646464646464646464646464646464646464646464646464646464646464646464646464646
464646464646464646464646464646464646464646464646464646464646464646464646464646
4646464646464646464646464747474848483E3E3E3C3C3C3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B
3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B
3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B
3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B
3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3C3C3C3E3E3E2F2F2F4747473A3A3A878787
878787878787878787878787878787878787878787878787878787878787878787878787878787
878787878787878787878787878787878787878787878787878787878787878787878787878787
878787878787878787878787878787878786878787878787878787878787878787878787878787
878787878787878787878787878787878787878787878787878787878787878787878787878787
3A3A3A2E2E2E4545453535356666655E5F5F5E5F5E5E5E5F5F5F5E5F5E5F5F5F5F5E5F5E5F5F5E
5E5E5F5E5F5F5F5E5E5F5E5F5E5E5F5F5F5E5F5E5E5F5F5F5F5E5E5F5F5F5F5F5F5F5F5F5F5E5E
5E5F5F5E5E5F5E5F5F5E5F5F5E5F5E5E5E5E5E5F5F5F5F5E5F5E5E5E5F5F5F5F5E5E5F5E5F5F5F
5E5E5F5E5E5F5F5F5E5E5E5F5E5F5E5F5F5E5F5E5F5F5F5E5E5F5F5F5F5E5F5F5F5F5E5E5F5E5F
5E5F5F5E5F5F5E5F5F5F5F5E4747473535352D2D2D4444443131316465645E5E5D5D5D5E5D5E5E
5D5D5E5D5D5D5E5E5E5D5D5D5D5D5D5D5D5E5D5D5D5D5D5D5D5E5E5D5D5D5E5E5D5D5D5D5D5D5D
5D5D5D5E5E5D5D5D5E5D5D5D5D5D5D5D5D5D5E5D5E5E5E5D5D5D5E5D5D5D5D5D5D5E5D5D5E5D5D
5D5D5D5D5D5E5D5D5D5D5D5D5D5D5D5D5D5E5D5D5D5D5D5E5E5D5D5D5D5D5D5D5D5D5D5E5D5E5D
5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D4646463131312C2C2C434343
3030306363635C5C5C5C5B5C5C5B5C5C5C5B5C5C5B5C5C5C5C5B5C5C5B5C5C5B5C5B5C5C5C5C5C
5C5C5C5B5C5C5C5C5C5B5C5C5C5C5C5B5C5C5C5C5C5B5B5C5C5C5C5C5C5C5C5C5C5C5B5C5B5C5C
5C5C5C5B5C5B5C5C5C5B5C5B5C5C5C5C5C5C5C5C5C5C5C5C5C5B5C5C5C5B5C5C5C5C5C5C5B5C5C
5C5C5C5C5C5C5C5C5C5B5C5C5C5C5C5B5C5C5C5C5B5C5C5C5C5C5B5C5C5C5C5C5B5C5C5C5C5C5B
5C5B5C4545453030302C2C2C434343303030606060595A59595959595959646464FFFFFFFFFFFF
FFFFFFC7C7C7595959B1B1B1F3F3F3FFFFFFA6A6A6595959595959595959595959FFFFFFFFFFFF
F3F3F39B9B9B595959595959595959595959595959595959595959595959595959595959595959
595959595959595959595959595959595959595959595959595959595959595959595959595959
5959595959595959595959595959595959594343433030302C2C2C4343433030305F5F5F585858
5758575757575F5F5FB8B8B82B2B2B2B2B2B3A3A3A797879CBCCCC3C3C3C2B2B2B434243585858
575858585857626363C6C6C62B2B2B3C3B3CE6E6E6575858585858575858575858585857575757
585857585858BCBCBB575857585757575758BBBCBC585757585857575858585857575758575758
585858575857585858575857575757585757585758575758585858585757575858424241303030
2C2C2C4343433030305C5D5D5555555555555454555C5D5DBCBCBC555555555555555555575757
BBBBBB5D5D5D5455555555555455555555555555555D5D5DC9C9C9555555696969D5D5D5555455
555555BABABA545555555555A4A4A4777777C6C6C6FFFFFFFFFFFF828282C6C5C6FFFFFFFFFFFF
828182555555A4A3A4F3F3F3F3F3F3BABABA555555605F60D1D1D1F3F3F3FFFFFFBABABA545555
5555545455555555554040403030302C2C2C4343433030305B5C5B5453545354535453535C5C5B
FFFFFFFFFFFFFFFFFFAFAEAE505050454545B9B9B9BABABA5353535453545453535453535B5C5B
FFFFFFFFFFFFFFFFFF7575755454535F5E5EB0B0B05453535453539898996E6E6F383737B7B7B7
373737474748383838B7B7B7373737484748818180CBCBCB3A3A3A3A3A3AB0B0B09797975B5C5C
F1F1F1484848292929CACACA696A695453535453535453543F3E3F3030302C2C2C434343303030
5A5A5A5252525252525252525A5A5AB7B7B72828282828283C3C3C5252524F504F393939606060
C5C5C55252535252535252525A5A5AC5C5C5282828444444CDCDCD6969695A5A5AAFAFAF525252
525252A4A4A46D6D6D525253BBBBBB5A5A5A525252525252BBBBBB5A5A5A5252529C9C9C696969
4F4F4F4F4F4F535353B2B2B25A5A5AAAAAAA4C4C4C5252529292926F6F6F525252525252525252
3D3D3D3030302C2C2C434343303030575757504F504F504F504F4F585857BBBBBB4F4F4F4F5050
4F4F504F4F504F4F4F4F4F4F777877D6D6D650504F4F4F4F4F4F50575757C8C8C8504F4F555655
BABABA6E6D6D4C4C4CE4E4E45A5A5A676666E4E4E46B6B6B504F4FADADAD6463644F504F4F4F4F
ADADAD6363634F4F4F707070CDCDCD5A5A5A5B5A5AB6B6B6878787575757AEAEAE4F504F4F4F4F
9797976B6B6B4F504F504F4F4F4F4F3C3B3B3030302C2C2C4343433030305656554E4D4E4E4E4E
4D4E4E575757BBBBBB4D4E4D4E4E4D4E4E4E717171FFFFFFFFFFFFD9D9D94949494D4E4E4E4D4E
4E4E4D4B4A4BFFFFFFFFFFFFF2F2F2A09FA04546464E4E4E9C9C9CFFFFFFE6E6E6B8B8B86B6B6B
4E4E4E858686FFFFFFACACAC4D4E4E868686FFFFFFACACAC434343919191F2F2F2F2F2F2AEAEAE
3E3E3E4B4B4BAEAEAE4E4E4E4E4E4E9696966B6B6B4E4E4E4E4E4D4E4E4D3A3A3A3030302C2C2C
4343433030305353534B4B4B4B4B4B4B4B4B4848483232324B4B4B4B4B4B4B4B4B434343252525
2525252D2D2D4646464B4B4C4B4B4B4B4B4B4B4B4B2525252525252828283737374B4B4B4B4B4B
3737372525252A2A2A3232324343434B4B4B3C3C3C2525253737374B4B4B3C3C3C252525373737
4B4B4B3939392828282828283434344B4B4B4B4B4B3434344B4C4B4B4B4B3939394343434B4B4B
4B4B4B4B4B4B3838383030302C2C2C434343303030525251494A4A4A494A4A4A494A4A4A4A494A
4A4A49494A4A494A494A4A4A4A4A4A494A494A4A494A494A494A4A494A4A494949494A4A49494A
494A49494A4A49494A4A494A49494A4A4A4A4A4A4A494A4A49494A494A4A4A4A4A49494A494A49
4A494A4A494A49494A4A4949494A4A4A4A4A494A4A494A494A494A4A494A4A494A49494A494A4A
4A494A4A4A4949494A4A4949494A4A4A494A4A49493736373030302C2C2C434343303030505150
484848484948484948484949494848484848484848484848484848484848484849484849484848
484848484848494848484848484848484849484948484848484948484848484948484848484848
484849484848484848484848484849484848484848484849484849484849484848484848494948
484948494848494849484948484848484849494948494948484849484848494948484848363636
3030302C2C2C4343433030304D4D4D464546454646454646454545464546464545454546454545
464645464545454545454645454545454545454645454546454546464545454646464645454645
454645454646464646464546464545464545454546454546464645454645454645464546454546
454545454645454645464646464646454645454646464545454646464646464645454545454546
4545464545464545464546463333333030302C2C2C4343433030304C4C4C444444444444444444
444444444444444444444444444444444444444444444444444444444444444444444444444444
444444444444444444444444444444444444444444444444444444444444444444444444444444
444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444454444444444444444444444443333333030302C2C2C444444
313131494949313131313131313131313132313131313232323131313231313131313131313131
323131323232313131313131313131313131313131323132313131313232313231313131323231
313131323131313132313131323131323131323132313231313131323131313231313131323231
313131313131323131313131313231323132313131313132323131313131313131313131313231
3232323231313131312C2C2C4545453535352A2A2A232323202020202020202020202020202020
202020202020202020202020202020202020202020202020202020202020202020202020202020
202020202020202020202020202020202020202020202020202020202020202020202020202020
202020202020202020202020202020202020202020202020202020202020202020202020202020
2020202020202020202020202020202020202A2A2A3535352D2D2D2E2E2E2C2C2C272727252525
242424242424242424242424242424242424242424242424242424242424242424242424242424
242424242424242424242424242424242424242424242424242424242424242424242424242424
242424242424242424242424242424242424242424242424242424242424242424242424242424
2424242424242424242424242424242424242424242424242424242424242424242727272C2C2C
2E2E2E

end
%%PageTrailer
%%Trailer
%%EOF
