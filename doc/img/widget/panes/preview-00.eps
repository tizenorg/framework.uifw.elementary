%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (../doc/latex/img/widget/panes/preview-00.eps)
%%CreationDate: (2014-09-11T12:23:26+09:00)
%%BoundingBox: -0 -0 77 21
%%HiResBoundingBox: 0 0 77 21
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 77 21
userdict begin
DisplayImage
0 0
77 21
12
77 21
0
0
474747464646464646464646464646464646464646464646464646464646464646464646464646
464646464646464646464646464646464646464646464646464646464646464646464646464646
464646464646464646464646464646464646464646464646474747474747474747474747474747
474747474747474747464646464646464646464646464646464646464646464646464646464646
464646464646464646464646464646464646464646464646464646464646464646464646464646
464646464646464646464646464646464646464646464646464646464646464646474747484848
3E3E3E3C3C3C3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B
3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B
3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3C3C3C3E3E3E3F3F3F404040404040404040404040404040
4040403F3F3F3E3E3E3C3C3C3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B
3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B
3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3C3C3C3E3E3E2F2F2F4747473A3A3A
878787878787878787878787878787878787878787878787878787878787878787878787878787
878787878787878787878787878787878787878787878787878787878787878787878787878787
8787878787878787878787878787873A3A3A3E3E3E404040404040404040404040404040404040
3E3E3E3A3A3A878787878787878787878787878787878787878787878787878787878787878787
878787878787878787878787878787878787878787878787878787878787878787878787878787
8787878787878787878787878787878787878787878787873A3A3A2E2E2E454545353535666665
5E5F5F5F5E5F5F5F5F5F5F5F5F5F5E5E5F5F5F5E5F5E5E5F5F5E5E5F5E5E5F5F5F5F5F5F5E5F5F
5F5F5E5F5F5F5F5F5F5F5E5E5E5F5F5E5F5E5E5F5F5E5E5F5E5E5F5F5F5E5F5E5F5E5F5F5F5F5F
5E5F5E5F5F5F5E5E5E4747473535353C3C3C4040403C3C3C3030303838384040404040403D3D3D
3535356666655E5F5F5F5E5F5F5F5F5F5F5F5F5F5E5E5F5F5F5E5E5E5E5F5F5F5E5F5F5F5F5F5F
5F5F5F5E5E5F5E5E5F5E5F5F5E5E5E5E5F5F5F5E5E5F5F5F5F5F5F5E5E5F5F5F5E5F5F5F5F5F5E
5F5F5E5F5F5E5F5F5F5F5E5F5F5F5F5E5E5E4747473535352D2D2D4444443131316465645E5E5D
5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5E5E5D5D5D5D5D5D5D5D5D5E5E5D5D5D5D5D5D5D5D5E5D
5D5E5D5D5D5E5D5D5D5D5D5E5D5D5D5E5D5D5D5D5D5E5D5D5D5D5D5D5D5E5D5D5D5D5D5D5D5E5E
5D5D5D5D5D5D4646463131313B3B3B4040403030300000000C0C0C5050504040403C3C3C313131
6465645E5E5D5D5D5D5D5D5D5E5E5E5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5E5E5D5D5D5E
5D5D5D5E5D5E5D5D5E5D5D5D5E5D5D5D5D5D5E5D5D5D5D5D5D5D5E5D5D5D5E5D5E5D5D5D5D5E5D
5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D4646463131312C2C2C4343433030306363635C5C5C5C5C5C
5C5C5C5C5C5C5C5B5C5B5C5C5C5C5C5B5C5C5B5C5C5B5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5B5B
5B5C5B878786FFFFFFA8A7A85C5C5C5C5C5C5C5C5C5C5C5C5B5C5C5B5C5C5C5C5C5C5C5C5C5B5C
5C5B5B4545453030303B3B3B4040403838380C0C0C1919196060604040403B3B3B303030636363
5C5C5C5C5C5C5C5C5C5C5C5C5C5B5C5B5C5C5C5C5C5B5C5C5C5C5B666666BDBDBD5C5C5C5C5C5B
5C5B5C5C5C5C5C5C5C5B5C5B5C5C5CBDBDBD5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5B
5C5C5C5C5C5C5C5B5C5C5B5B4545453030302C2C2C434343303030606060595A59595959595959
595959595959595959C7C7C7595959595959595959595959595959595959595959595959595959
B7B7B7484848444444595959595959595959595959595959595959595959595959595959595959
4343433030303B3B3B4040404040405353538787874B4B4B4040403B3B3B303030606060595A59
595959595959595959FFFFFFFFFFFFFFFFFFC7C7C75959595555553E3E3E595959595959595959
595959595959595959646464B1B1B1595959595959595959595959595959595959595959595959
5959595959595959594343433030302C2C2C4343433030305F5F5F585858585758585758585757
575858626363CACACA585758575858575858585858585758575858585857585857C6C7C6FFFFFF
FFFFFF838384575757BCBCBB585857575758585858585858575757575858585857585858424241
3030303B3B3B4040404040404040404343434040404040403B3B3B3030305F5F5F585858585758
585758585758C6C6C62B2B2B2B2B2BB0B0B08F8F8F626263C7C7C7575857585758585858575858
5757575858575F5F5ED8D7D7E8E8E8FFFFFFB0B0B0575858575758BBBCBB575857575757585758
5858575858584242413030302C2C2C4343433030305C5D5D555555555455555554545554555555
5D5D5DC9C9C9555555555555555555545455A4A4A4F3F3F3E8E8E8777777383838A9A9A9383838
494849C5C5C6FFFFFFFFFFFF828282555555555455555555555455555454545555404040303030
3B3B3B4040403C3C3C3030303838384040404040403B3B3B3030305C5D5D555555555455555554
555555C9C9C9555555606060B0B0B07777775C5D5DBCBCBC545455AFAFAFF3F3F3F3F3F3C6C6C6
8282825D5D5DF1F1F14B4B4B292A2AD8D8D8605F60C6C6C6FFFFFFFFFFFF828282545555555454
5455554040403030302C2C2C4343433030305B5C5B5453545453535353535453535453535C5C5C
C9C8C9535353545353535453767675B2B2B22C2C2C4A4A4ACECECE545354B0B0B05B5B5C545454
373838B7B7B73737374748475453545354545353535453545453535354543F3E3F3030303B3B3B
4040403030300000000C0C0C5050504040403B3B3B3030305B5C5B545354545353535353535354
FFFFFFFFFFFFFFFFFFA2A2A24748485B5B5CBCBCBC757676CBCBCA3A3A3A3A3A3AD6D6D7787878
5B5C5BB8B8B84D4D4E5354539E9E9E737373373837B7B7B7373737474747535353545353535454
3F3E3F3030302C2C2C4343433030305A5A5A5252525252525252525252525252525A5B5AC8C8C8
525252525253525252919191FFFFFFFFFFFFFFFFFFFFFFFF525252AFAFAF5A5A5A525252525252
BBBBBB5A5A5A5252525252525252525252525252525252525252523D3D3D3030303B3B3B404040
3838381010102424246363634040403B3B3B3030305A5A5A525252525252525252525252C5C5C5
282928444444B0B0B05252525A5A5ABBBBBB8585858484844F4F4F4F4F4F9191917878785A5A5A
AEAEAE5252525252529797976D6D6D525252BBBBBB5A5A5A5252525252525252525252523D3D3D
3030302C2C2C434343303030575757504F504F4F4F4F4F4F504F4F4F4F50575757C8C8C84F4F4F
4F4F4F4F4F4F7F7F7FA8A8A8272727272727272727504F4FAEAEAE5857584F4F4F4F4F4FADADAD
646363504F4F4F4F4F4F4F4F4F504F4F4F4F4F4F4F504F4F3C3B3B3030303B3B3B404040404040
5B5B5BB0B0B05353534040403B3B3B303030575757504F504F4F4F4F4F4F4F4F4FC8C8C84F4F4F
494949BCBCBC666667575757BBBBBB676767CBCBCB5A5A5A5A5A5AD7D7D7757576575757AEAEAE
4F4F4F4F4F4F9797976B6B6B504F4FADADAE6363634F504F4F4F504F4F4F504F4F3C3B3B303030
2C2C2C4343433030305656554E4D4E4E4E4D4E4E4D4E4E4E4E4E4E4B4B4BFFFFFFFFFFFFFFFFFF
C3C3C3404040AEAEAEF3F3F3FFFFFFB8B8B84E4E4DAEAEAE4B4A4A4D4E4E4E4E4E868686FFFFFF
ACACAB4E4E4E4E4E4E4E4E4E4E4D4D4D4E4D4E4E4E3A3A3A3030303B3B3B404040404040434343
4C4C4C4343434040403B3B3B3030305656554E4D4E4E4E4D4E4E4D4D4E4DC8C8C84E4E4E4E4D4E
4F4F4FC1C1C1575757BBBBBB464645919191F2F2F2F2F2F2C7C7C76868684A4B4BAEAEAE4E4E4D
4E4D4E9696966B6B6B4E4E4D868686FFFFFFACACAC4E4E4D4D4E4D4E4E4E3A3A3A3030302C2C2C
4343433030305353534B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B252525252525252525323232
4B4B4B3434342828282525253434344B4B4B3434344B4B4B4B4B4B4B4B4B3C3C3C252525373737
4B4B4B4B4B4B4B4C4B4B4B4B4B4B4B4B4B4B3838383030303B3B3B4040403C3C3C303030383838
4040404040403B3B3B3030305353534B4B4B4B4B4B4B4B4B4B4B4B2F2F2F4B4B4B4B4B4B464646
3232324848483232324B4B4B393939282828444444E3E3E34343434B4B4B3434344B4B4B4B4B4B
3939394343434B4B4B3C3C3C2525253737374B4B4B4B4B4B4B4B4B3838383030302C2C2C434343
303030525251494A4A4A4A4A4A494A494949494A494A4A4A4A4A494A494A494A4A494A4A49494A
494A4A4A494A4A4A494A4A494A4A4A494A4A494A494A494A494A4A494A4A494A4A4A494A4A494A
49494A4A494A49494949494949494A3736373030303B3B3B4040403030300000000C0C0C505050
4040403B3B3B303030525251494A4A4A4A4A4A494A4A4A49494A494A4A4A494A494A494A4A4949
4A4A4949494A4A4949F2F2F2FFFFFFE6E6E6626262494A4A49494A49494A494A4A4A4949494949
4A4A4A4A494A4A494A494A4A4A494A49494A49494949494A3736373030302C2C2C434343303030
505150484848484849484948484948484848484848484849484848484848484848484848484948
484948484848484948484848484948484849484848484948484849484848484948494848484948
4848494848484848484848483636363030303B3B3B4040403838380C0C0C191919606060404040
3B3B3B303030505150484848484849484948484848484848484848484849484848484848484848
4848484948482626262323232828283E3E3F484848484848484848484949484849484949484849
4849484948494848484848494949484848484848483636363030302C2C2C4343433030304D4D4D
464546464545454545454546454545464545454645454545454645454546464545464645454645
454546464645454545454545454645464546464645454645464646454645454646454646464645
4646454546464646463333333030303B3B3B4040404040405353538787874B4B4B4040403B3B3B
3030304D4D4D464546464545454545464545454545464545454545454545454545454545464545
454545454645454646464546464545454546464645464645464645454545454645454545454645
4645454646464646454545464546464646463333333030302C2C2C4343433030304C4C4C444444
444445444444444444444444444444444444444444444444444444444444444444444444444444
444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444443333333030303B3B3B4040404040404040404040404040404040403B3B3B303030
4C4C4C444444444445444444444444444444444444444444444444444444444444444444444444
444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444454444444444443333333030302C2C2C444444313131494949313131313131
323131323131313231313131323131323232313131313131313131313131313231313131313131
323131313131323132313131313131313131313131323131313131323132313132313131323231
3132323231313131313B3B3B4040404040404040404040404040404040403C3C3C313131494949
313131313131323131313232313231313131313131323232313131313131313131323131313131
313131313131313132313131323131313231313132313231313231313131323131313231313131
3131323131313232313132323231313131312C2C2C4545453535352A2A2A232323202020202020
202020202020202020202020202020202020202020202020202020202020202020202020202020
202020202020202020202020202020202020202020202020202020202020202020202020202020
2A2A2A3535353C3C3C4040404040404040404040404040404040403D3D3D3535352A2A2A232323
202020202020202020202020202020202020202020202020202020202020202020202020202020
202020202020202020202020202020202020202020202020202020202020202020202020202020
2020202020202020202A2A2A3535352D2D2D2E2E2E2C2C2C272727252525242424242424242424
242424242424242424242424242424242424242424242424242424242424242424242424242424
242424242424242424242424242424242424242424242424242424242424242424242424272727
2C2C2C2E2E2E3030303030303030303030303030303030302E2E2E2C2C2C272727252525242424
242424242424242424242424242424242424242424242424242424242424242424242424242424
242424242424242424242424242424242424242424242424242424242424242424242424242424
2424242424242727272C2C2C2E2E2E

end
%%PageTrailer
%%Trailer
%%EOF
